{"version":3,"file":"ColumnLayout.js","sourceRoot":"","sources":["../../../src/template/ColumnLayout.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD,OAAO,eAAe,CAAC;AACvB,OAAO,gBAAgB,CAAC;AACxB;;;;GAIG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAwB1C,MAAM;QACJ,OAAO,IAAI,CAAA,gBAAgB,CAAC;IAC9B,CAAC;CACF,CAAA;AA1BQ,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;GAqBlB,CAAC;AAtBS,YAAY;IADxB,aAAa,CAAC,mBAAmB,CAAC;GACtB,YAAY,CA2BxB;SA3BY,YAAY","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\nimport '../atom/Title';\nimport '../atom/Button';\n/**\n * An example element.\n *\n * @slot Slot for the content\n */\n@customElement('iff-column-layout')\nexport class ColumnLayout extends LitElement {\n  static styles = css`\n    :host {\n      display: flex;\n      align-content: space-between;\n      justify-content: center;\n      align-items: flex-start;\n      flex-flow: row wrap;\n      height: 100%;\n    }\n\n    ::slotted(*) {\n      max-width: 100%;\n      padding-bottom: 2.5rem;\n    }\n\n    @media screen and (min-width: 1024px) {\n      ::slotted(*) {\n        max-width: 100%;\n        padding-bottom: 0;\n      }\n    }\n  `;\n\n  render() {\n    return html`<slot></slot> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-column-layout': ColumnLayout;\n  }\n}\n"]}
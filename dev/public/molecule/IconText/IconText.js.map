{"version":3,"file":"IconText.js","sourceRoot":"","sources":["../../../../src/molecule/IconText/IconText.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,iBAAiB,CAAC;AACzB,OAAO,iBAAiB,CAAC;AACzB,OAAO,kBAAkB,CAAC;AAC1B,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAC,MAAM,KAAK,CAAC;AACnD,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,qBAAqB,EAAC,MAAM,iDAAiD,CAAC;AAGtF,OAAO,EAAC,SAAS,EAAC,MAAM,2BAA2B,CAAC;AAEpD,OAAO,KAAK,MAAM,aAAa,CAAC;AAChC;;;;;;GAMG;AAEH,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAkBtC,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI;YACd,CAAC,CAAC,IAAI,CAAA,kBAAkB,IAAI,CAAC,IAAI,WAAW,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3D,IAAI,CAAC,aAAa,EAAE;UACvB;YACJ,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAEO,aAAa;QACnB,OAAO,IAAI,CAAA;;;iBAGE,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,MAAM,KAAK,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC3B;QACH,CAAC;;UAEC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;;WAEpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;KAEzB,CAAC;IACJ,CAAC;IAEO,OAAO,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC;IAClD,CAAC;CACF,CAAA;AA9CQ,eAAM,GAAG,CAAC,KAAK,CAAC,CAAC;AAIxB;IADC,QAAQ,EAAE;;uCACiB;AAI5B;IADC,QAAQ,EAAE;;sCACU;AAGrB;IADC,QAAQ,EAAE;;wCACsB;AAIjC;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;sCACgB;AAhB/B,QAAQ;IADpB,aAAa,CAAC,eAAe,CAAC;GAClB,QAAQ,CA+CpB;SA/CY,QAAQ;AAiDrB,MAAM,KAAK,GAAG,GAAG,CAAA;;;;;;OAMV,CAAC","sourcesContent":["import '../../atom/Link';\nimport '../../atom/Text';\nimport '../../atom/Title';\nimport {LitElement, html, svg, nothing} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {LitCoilConnectedEvent} from '../../controller/UpdateControllerConnectedEvent';\nimport {viewVariants} from '../../controller/ressources/views';\nimport {targetVariations} from '../../atom/Link/Link';\nimport {ifDefined} from 'lit/directives/if-defined';\n\nimport style from './style.css';\n/**\n * Card to display articles\n *\n * @slot text - Slot to set text and styling\n * @slot  Set the text\n\n */\n@customElement('iff-icon-text')\nexport class IconText extends LitElement {\n  static styles = [style];\n\n  // set the event that gets fired\n  @property()\n  public event?: viewVariants;\n\n  // set the event that gets fired\n  @property()\n  public href?: string;\n  // set the event that gets fired\n  @property()\n  public target?: targetVariations;\n\n  // Set the position of the icon\n  @property({reflect: true})\n  public icon?: 'start' | 'end' | undefined;\n\n  render() {\n    return this.href\n      ? html`<iff-link href=${this.href} target=${ifDefined(this.target)}\n          >${this.setIconRender()}</iff-link\n        >`\n      : this.setIconRender();\n  }\n\n  private setIconRender() {\n    return html`\n      <div\n        class=\"icon-text\"\n        @click=${() => {\n          if (this.event) {\n            const event = new LitCoilConnectedEvent(this.event);\n            this.dispatchEvent(event);\n          }\n        }}\n      >\n        ${this.setIcon('start')}<slot name=\"text\"\n          ><iff-text styling=\"paragraph\"><slot></slot></iff-text></slot\n        >${this.setIcon('end')}\n      </div>\n    `;\n  }\n\n  private setIcon(position: string) {\n    return this.icon === position ? arrow : nothing;\n  }\n}\n\nconst arrow = svg`<svg\n  viewBox=\"0 0 12 12\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path d=\"M0 5H8.2L5.1 1.9L6.5 0.5L12 6L6.5 11.5L5.1 10.1L8.2 7H0V5Z\" />\n</svg>`;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-icon-text': IconText;\n  }\n}\n"]}
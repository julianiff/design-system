{"version":3,"file":"Link.js","sourceRoot":"","sources":["../../../../src/atom/Link/Link.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,SAAS,EAAC,MAAM,8BAA8B,CAAC;AAEvD,OAAO,EAAC,qBAAqB,EAAC,MAAM,iDAAiD,CAAC;AACtF,OAAO,KAAK,MAAM,YAAY,CAAC;AAI/B;;;;GAIG;AAEH,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,UAAU;IAkBlC,MAAM;QACJ,OAAO,IAAI,CAAA;;eAEA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;mBAChB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;iBAC1B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;qBAClB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;cAC5B,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;yBACR,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC;iBACtC,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,MAAM,KAAK,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC3B;QACH,CAAC;;;;KAIJ,CAAC;IACJ,CAAC;CACF,CAAA;AArCQ,WAAM,GAAG,CAAC,KAAK,CAAC,CAAC;AAGxB;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;mCACE;AAE5B;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;kCACL;AAErB;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;sCACD;AAEzB;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;mCACJ;AAEtB;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;4CACK;AAE/B;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;iCACN;AAEpB;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;;oCACO;AAhBtB,IAAI;IADhB,aAAa,CAAC,UAAU,CAAC;GACb,IAAI,CAsChB;SAtCY,IAAI","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {ifDefined} from 'lit/directives/if-defined.js';\nimport {viewVariants} from '../../controller/ressources/views';\nimport {LitCoilConnectedEvent} from '../../controller/UpdateControllerConnectedEvent';\nimport style from './Link.css';\n\nexport type targetVariations = '_blank' | '_parent' | '_self' | '_top';\n\n/**\n * Text Styling Component\n *\n * @slot - Slot of the element for the text\n */\n@customElement('iff-link')\nexport class Link extends LitElement {\n  static styles = [style];\n\n  @property({reflect: true})\n  public event?: viewVariants;\n  @property({reflect: true})\n  public href?: string;\n  @property({reflect: true})\n  public hreflang?: string;\n  @property({reflect: true})\n  public label?: string;\n  @property({reflect: true})\n  public referrerpolicy?: string;\n  @property({reflect: true})\n  public rel?: string;\n  @property({reflect: true})\n  public target?: targetVariations;\n\n  render() {\n    return html`\n      <a\n        href=${ifDefined(this.href)}\n        hreflang=${ifDefined(this.hreflang)}\n        target=${ifDefined(this.target)}\n        aria-label=${ifDefined(this.label)}\n        rel=${ifDefined(this.rel)}\n        referrerpolicy=${ifDefined(this.referrerpolicy)}\n        @click=${() => {\n          if (this.event) {\n            const event = new LitCoilConnectedEvent(this.event);\n            this.dispatchEvent(event);\n          }\n        }}\n      >\n        <slot></slot>\n      </a>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'iff-link': Link;\n  }\n}\n"]}
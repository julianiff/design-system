{"version":3,"file":"build-views-controller.js","sourceRoot":"","sources":["../../../src/controller/build-views-controller.ts"],"names":[],"mappings":"AAAA,OAAO,kBAAkB,MAAM,yBAAyB,CAAC;AAEzD,OAAO,EAAC,SAAS,EAAE,SAAS,EAAkB,MAAM,kBAAkB,CAAC;AACvE,OAAO,EAAC,KAAK,EAAe,MAAM,oBAAoB,CAAC;AACvD,OAAO,EAAC,qBAAqB,EAAC,MAAM,kCAAkC,CAAC;AAEvE,MAAM,OAAO,oBAAoB;IAI/B,YAAY,IAA4B,EAAE,SAAwB;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,SAAS;YACX,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,aAAa,CAAC,IAAkB;QACtC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAED,aAAa;QACX,MAAM,CAAC,gBAAgB,CACrB,qBAAqB,CAAC,SAAS,EAC/B,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,EACtC,KAAK,CACN,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,MAAM,CAAC,mBAAmB,CACxB,qBAAqB,CAAC,SAAS,EAC/B,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,EACtC,KAAK,CACN,CAAC;IACJ,CAAC;CACF;AAED,MAAM,aAAc,SAAQ,SAAS;IACnC,MAAM,CAAC,KAAU;QACf,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;CACF","sourcesContent":["import transformJsonToLit from 'json-to-lit-transformer';\nimport {ReactiveController, ReactiveControllerHost} from 'lit';\nimport {directive, Directive, DirectiveResult} from 'lit/directive.js';\nimport {Views, viewVariants} from './ressources/views';\nimport {LitCoilConnectedEvent} from './UpdateControllerConnectedEvent';\n\nexport class BuildViewsController implements ReactiveController {\n  host: ReactiveControllerHost;\n  renderViews?: DirectiveResult;\n\n  constructor(host: ReactiveControllerHost, viewInput?: viewVariants) {\n    this.host = host;\n    host.addController(this);\n\n    if (viewInput)\n      this.renderViews = directive(RenderContent)(Views[viewInput]);\n  }\n\n  private _updateRender(view: viewVariants) {\n    this.renderViews = directive(RenderContent)(Views[view]);\n    this.host.requestUpdate();\n  }\n\n  hostConnected() {\n    window.addEventListener(\n      LitCoilConnectedEvent.eventName,\n      (e: any) => this._updateRender(e.view),\n      false\n    );\n  }\n\n  hostDisconnected() {\n    window.removeEventListener(\n      LitCoilConnectedEvent.eventName,\n      (e: any) => this._updateRender(e.view),\n      false\n    );\n  }\n}\n\nclass RenderContent extends Directive {\n  render(input: any) {\n    return transformJsonToLit(input);\n  }\n}\n"]}